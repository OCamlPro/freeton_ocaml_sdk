
# name of package
name = "freeton_client_lib"
skeleton = "c_binding"

# version if different from project version
# version = "0.1.0"

# synopsis if different from project synopsis
# synopsis = ...

# description if different from project description
# description = ...

# kind is either "library", "program" or "virtual"
kind = "library"

# authors if different from project authors
# authors = [ "Me <me@metoo.org>" ]

# name of a file to generate with the current version
gen-version = "version.ml"

# supported file generators are "ocamllex", "ocamlyacc" and "menhir" 
# default is [ "ocamllex", "ocamlyacc" ] 
# generators = [ "ocamllex", "menhir" ]

# whether all modules should be packed/wrapped (default is true)
pack-modules = true

# whether the package can be silently skipped if missing deps (default is false)
# optional = true

# module name used to pack modules (if pack-modules is true)
pack = "Ton_client"

# preprocessing options
#  preprocess = "per-module (((action (run ./toto.sh %{input-file})) mod))" 
preprocess = "pps ppx_deriving_encoding"

# files to skip while updating at package level
skip = ["main.ml"]

# package library dependencies
[dependencies]
ppx_deriving_encoding = ""
[dependencies.base-threads]
libname = "threads"
[dependencies.ez_api]
libname = "ez_api.encoding"

# package tools dependencies
[tools]
# ...

# package fields (depends on package skeleton)
#Examples:
#  dune-stanzas = "(preprocess (pps ppx_deriving_encoding))" 
#  dune-libraries = "bigstring" 
#  dune-trailer = "(install (..))" 
#  opam-trailer = "pin-depends: [..]" 
#  no-opam-test = "yes" 
#  no-opam-doc = "yes" 
#  gen-opam = "some" | "all" 
[fields]
c-names = "ton_client_ocaml_stubs"
